name: '[Dashboard][SF] ProductCollection'
on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to run tests'
        default: "STAG"
        type: choice
        options:
          - CA
          - STAG
          - PROD
          - PREPROD
      languageSF:
        description: 'Language on SSR to run tests'
        default: "VIE"
        type: choice
        options:
          - VIE
          - ENG
      languageDB:
        description: 'Language on Dashboard to run tests'
        default: "VIE"
        type: choice
        options:
          - VIE
          - ENG
      domain:
        description: 'Domain to run tests'
        default: "VN"
        type: choice
        options:
          - VN
          - BIZ
jobs:
  clone-git-then-build-test:
    runs-on: ubuntu-20.04
 
    steps:
      - name: Checkout the current repository
        uses: actions/checkout@v2
 
      - name: Replace env variables
        run: |
            sed -i 's|environment=.*|environment=${{ inputs.environment }}|' src/main/resources/config.properties
            sed -i 's|languageSF=.*|languageSF=${{ inputs.languageSF }}|' src/main/resources/config.properties
            sed -i 's|languageDB=.*|languageDB=${{ inputs.languageDB }}|' src/main/resources/config.properties
            sed -i 's|headless=.*|headless=true|' src/main/resources/config.properties
            sed -i 's|enableProxy=.*|enableProxy=false|' src/main/resources/config.properties
            sed -i 's|domain=.*|domain=${{ inputs.domain }}|' src/main/resources/config.properties
 
      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: '22'
          distribution: 'adopt'
 
      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-ubuntu
          restore-keys: |
            ${{ runner.os }}-maven-ubuntu
 
      - name: Install dependencies
        run: |
          mvn install -DskipTests
 
      - name: Run tests
        run: |
          mvn --batch-mode test "-DsuiteFile=test_config/web/productCollectionTest.xml"
          
      - name: Upload Test Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: Test Reports - Product Collection
          path: |
            **/html/index.html
            **/reportng.css
            **/reportng.js
            **/suite*_test*_results.html
            **/ExtentReport.html
 
   
